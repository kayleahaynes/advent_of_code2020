}
for (n in 2:500){
print(n)
j <- 1
stop = FALSE
while(stop == FALSE){
check_numbers <- sum(filter_numbers_less_than_target[j:(j+(n-1)),]$X1)
# stop the while loop is the sum has been found or j has got too big
if(check_numbers ==  preamble[i+25,]$X1 || (j+n) > nrow(filter_numbers_less_than_target)){
stop = TRUE
}
j <- j + 1
}
# stop the for loop is the number has been found
if (check_numbers ==  preamble[i+25,]$X1){
break
}
}
check_numbers
preamble[i+25,]$X1
i
stop <- FALSE
i <- 1
while(stop == FALSE){
check_numbers <- preamble[i:(i+24),] %>%
mutate(need = preamble[i+25,]$X1 - preamble[i:(i+24),]$X1) %>%
mutate(answer = need %in% preamble[i:(i+24),]$X1 & X1 != need) %>%
filter(answer)
if (nrow(check_numbers) == 0){
print(preamble[i+25,]$X1)
stop = TRUE
}
i <- i + 1
}
i
for (n in 2:500){
print(n)
j <- 1
stop = FALSE
while(stop == FALSE){
check_numbers <- sum(filter_numbers_less_than_target[j:(j+(n-1)),]$X1)
# stop the while loop is the sum has been found or j has got too big
if(check_numbers ==  preamble[i+25,]$X1 || (j+n) > nrow(filter_numbers_less_than_target)){
stop = TRUE
}
j <- j + 1
}
# stop the for loop is the number has been found
if (check_numbers ==  preamble[i+25,]$X1){
break
}
}
j <- 1
for (n in 2:500){
print(n)
j <- 1
stop = FALSE
while(stop == FALSE){
check_numbers <- sum(filter_numbers_less_than_target[j:(j+(n-1)),]$X1)
# stop the while loop is the sum has been found or j has got too big
if(check_numbers ==  preamble[i+25,]$X1 || (j+n) > nrow(filter_numbers_less_than_target)){
stop = TRUE
}
j <- j + 1
}
# stop the for loop is the number has been found
if (check_numbers ==  preamble[i+25,]$X1){
break
}
}
j
check_numbers
filter_numbers_less_than_target[j:(j+(n-1)),]
sum(filter_numbers_less_than_target[j:(j+(n-1)),]$X1)
check_numbers
sum(filter_numbers_less_than_target[j:(j+(n-1)),]$X1)
j
j <- 507
sum(filter_numbers_less_than_target[j:(j+(n-1)),]$X1)
preamble[i+25,]$X1
filter_numbers_less_than_target[j:(j+(n-1)),]$X1
12702032 + 13094505
preamble[i+25,]$X1
preamble <- read_csv('day9.txt', col_names = FALSE)
stop <- FALSE
i <- 1
while(stop == FALSE){
check_numbers <- preamble[i:(i+24),] %>%
mutate(need = preamble[i+25,]$X1 - preamble[i:(i+24),]$X1) %>%
mutate(answer = need %in% preamble[i:(i+24),]$X1 & X1 != need) %>%
filter(answer)
if (nrow(check_numbers) == 0){
print(preamble[i+25,]$X1)
stop = TRUE
}
i <- i + 1
}
preamble
stop <- FALSE
i <- 1
while(stop == FALSE){
check_numbers <- preamble[i:(i+24),] %>%
mutate(need = preamble[i+25,]$X1 - preamble[i:(i+24),]$X1) %>%
mutate(answer = need %in% preamble[i:(i+24),]$X1 & X1 != need) %>%
filter(answer)
if (nrow(check_numbers) == 0){
print(preamble[i+25,]$X1)
stop = TRUE
}
i <- i + 1
}
n <- 25
m <- 25
stop <- FALSE
i <- 1
m <- 25
while(stop == FALSE){
check_numbers <- preamble[i:(i+m-1),] %>%
mutate(need = preamble[i+m,]$X1 - preamble[i:(i+m-1),]$X1) %>%
mutate(answer = need %in% preamble[i:(i+m-1),]$X1 & X1 != need) %>%
filter(answer)
if (nrow(check_numbers) == 0){
print(preamble[i+m,]$X1)
stop = TRUE
}
i <- i + 1
}
i+m-1
m <- 5
while(stop == FALSE){
check_numbers <- preamble[i:(i+(m-1)),] %>%
mutate(need = preamble[i+m,]$X1 - preamble[i:(i+(m-1)),]$X1) %>%
mutate(answer = need %in% preamble[i:(i+(m-1)),]$X1 & X1 != need) %>%
filter(answer)
if (nrow(check_numbers) == 0){
print(preamble[i+m,]$X1)
stop = TRUE
}
i <- i + 1
}
stop <- FALSE
i <- 1
m <- 5
while(stop == FALSE){
check_numbers <- preamble[i:(i+(m-1)),] %>%
mutate(need = preamble[i+m,]$X1 - preamble[i:(i+(m-1)),]$X1) %>%
mutate(answer = need %in% preamble[i:(i+(m-1)),]$X1 & X1 != need) %>%
filter(answer)
if (nrow(check_numbers) == 0){
print(preamble[i+m,]$X1)
stop = TRUE
}
i <- i + 1
}
# only need to consider numbers that are less than the preamble
filter_numbers_less_than_target <- preamble %>%
filter(X1 < preamble[i+m,]$X1)
filter_numbers_less_than_target
preamble[i+m,]$X1
# only need to consider numbers that are less than the preamble
filter_numbers_less_than_target <- preamble %>%
filter(X1 < preamble[i+m-1,]$X1)
filter_numbers_less_than_target
j <- 1
i+m-1
preamble[i+m-1,]
for (n in 2:500){
print(n)
j <- 1
stop = FALSE
while(stop == FALSE){
check_numbers <- sum(filter_numbers_less_than_target[j:(j+(n-1)),]$X1)
# stop the while loop is the sum has been found or j has got too big
if(check_numbers ==  preamble[i+m-1,]$X1 || (j+n) > nrow(filter_numbers_less_than_target)){
stop = TRUE
}
j <- j + 1
}
# stop the for loop is the number has been found
if (check_numbers ==  preamble[i+m,]$X1){
break
}
}
check_numbers
filter_numbers_less_than_target[j:(j+(n-1)),]$X1
preamble[i+m,]$X1
check_numbers
j
j <- 1
j <- 11
sum(filter_numbers_less_than_target[j:(j+(n-1)),]$X1)
filter_numbers_less_than_target[j:(j+(n-1)),]$X1
j <- 1
nrow(filter_numbers_less_than_target)
n <- 2
j
filter_numbers_less_than_target[j:(j+(n-1)),]
check_numbers <- sum(filter_numbers_less_than_target[j:(j+(n-1)),]$X1)
check_numbers
check_numbers ==  preamble[i+m-1,]$X1
n <- n + 1
sum(filter_numbers_less_than_target[j:(j+(n-1)),]$X1)
preamble[i+m-1,]$X1
n <= 10
n <- 10
filter_numbers_less_than_target[j:(j+(n-1)),]$X1
filter_numbers_less_than_target
n <- 12
filter_numbers_less_than_target[j:(j+(n-1)),]$X1
(j+(n-1)
i
j
j + (n-1)
n
n <- 13
filter_numbers_less_than_target[j:(j+(n-1)),]
for (j in 1:nrow(filter_numbers_less_than_target)){
n <- 2
stop = FALSE
while(stop == FALSE){
check_numbers <- sum(filter_numbers_less_than_target[j:(j+(n-1)),]$X1)
# stop the while loop if the sum of the numbers is greater than or equal to the target number
# or stop is n is too big
if(check_numbers =>  preamble[i+m-1,]$X1 | (j + n) > nrow(filter_numbers_less_than_target)){
stop = TRUE
}
n <- n + 1
}
# stop the for loop is the number has been found
if (check_numbers ==  preamble[i+m,]$X1){
break
}
}
for (j in 1:nrow(filter_numbers_less_than_target)){
n <- 2
stop = FALSE
while(stop == FALSE){
check_numbers <- sum(filter_numbers_less_than_target[j:(j+(n-1)),]$X1)
# stop the while loop if the sum of the numbers is greater than or equal to the target number
# or stop is n is too big
if(check_numbers =>  preamble[i+m-1,]$X1 || (j + n) > nrow(filter_numbers_less_than_target)){
stop = TRUE
}
n <- n + 1
}
# stop the for loop is the number has been found
if (check_numbers ==  preamble[i+m,]$X1){
break
}
}
check_numbers =>  preamble[i+m-1,]$X1
check_numbers >=  preamble[i+m-1,]$X1
(j + n) > nrow(filter_numbers_less_than_target)
(j + n)
check_numbers >=  preamble[i+m-1,]$X1 || (j + n) > nrow(filter_numbers_less_than_target
check_numbers >=  preamble[i+m-1,]$X1 || (j + n) > nrow(filter_numbers_less_than_target)
# only need to consider numbers that are less than the preamble
filter_numbers_less_than_target <- preamble %>%
filter(X1 < preamble[i+m-1,]$X1)
for (j in 1:nrow(filter_numbers_less_than_target)){
n <- 2
stop = FALSE
while(stop == FALSE){
check_numbers <- sum(filter_numbers_less_than_target[j:(j+(n-1)),]$X1)
# stop the while loop if the sum of the numbers is greater than or equal to the target number
# or stop is n is too big
if(check_numbers >=  preamble[i+m-1,]$X1 || (j + n) > nrow(filter_numbers_less_than_target)){
stop = TRUE
}
n <- n + 1
}
# stop the for loop is the number has been found
if (check_numbers ==  preamble[i+m,]$X1){
break
}
}
j
n
n <- 2
n <- 3
j
j <- 3
n <- 2
stop = FALSE
while(stop == FALSE){
check_numbers <- sum(filter_numbers_less_than_target[j:(j+(n-1)),]$X1)
# stop the while loop if the sum of the numbers is greater than or equal to the target number
# or stop is n is too big
if(check_numbers >=  preamble[i+m-1,]$X1 || (j + n) > nrow(filter_numbers_less_than_target)){
stop = TRUE
}
n <- n + 1
}
n
sum(filter_numbers_less_than_target[j:(j+(n-1)),]$X1
filter_numbers_less_than_target[j:(j+(n-1)),]
n
n <- 4
j
filter_numbers_less_than_target[j:(j+(n-1)),]$X1
filter_numbers_less_than_target[j:(j+(n-2)),]$X1
# only need to consider numbers that are less than the preamble
filter_numbers_less_than_target <- preamble %>%
filter(X1 < preamble[i+m-1,]$X1)
for (j in 1:nrow(filter_numbers_less_than_target)){
n <- 2
stop = FALSE
while(stop == FALSE){
check_numbers <- sum(filter_numbers_less_than_target[j:(j+(n-1)),]$X1)
# stop the while loop if the sum of the numbers is greater than or equal to the target number
# or stop is n is too big
if(check_numbers >=  preamble[i+m-1,]$X1 || (j + n) > nrow(filter_numbers_less_than_target)){
stop = TRUE
}
n <- n + 1
}
# stop the for loop is the number has been found
if (check_numbers ==  preamble[i+m,]$X1){
break
}
}
filter_numbers_less_than_target[j:(j+(n-2)),]$X1
# only need to consider numbers that are less than the preamble
filter_numbers_less_than_target <- preamble %>%
filter(X1 < preamble[i+m-1,]$X1)
j <- 3
n <- 2
stop = FALSE
while(stop == FALSE){
check_numbers <- sum(filter_numbers_less_than_target[j:(j+(n-1)),]$X1)
# stop the while loop if the sum of the numbers is greater than or equal to the target number
# or stop is n is too big
if(check_numbers >=  preamble[i+m-1,]$X1 || (j + n) > nrow(filter_numbers_less_than_target)){
stop = TRUE
}
n <- n + 1
}
check_numbers ==  preamble[j+m,]$X1
preamble[j+m,]$X1
preamble[j+m,]$X1
n <- 3
j <- 3
n <- 4
check_numbers <- sum(filter_numbers_less_than_target[j:(j+(n-1)),]$X1)
check_numbers
check_numbers >=  preamble[i+m-1,]$X1
preamble[j+m,]$X1
i
preamble[j+m-1,]$X1
preamble[j+m,]$X1
j
m
preamble[i+m,]
i
m
preamble[i+m,]$X1
stop <- FALSE
i <- 1
m <- 5
while(stop == FALSE){
check_numbers <- preamble[i:(i+(m-1)),] %>%
mutate(need = preamble[i+m,]$X1 - preamble[i:(i+(m-1)),]$X1) %>%
mutate(answer = need %in% preamble[i:(i+(m-1)),]$X1 & X1 != need) %>%
filter(answer)
if (nrow(check_numbers) == 0){
print(preamble[i+m,]$X1)
stop = TRUE
}
i <- i + 1
}
preamble[i+m,]$X1
preamble[(i-1)+m,]$X1
# stop the while loop if the sum of the numbers is greater than or equal to the target number
# or stop is n is too big
if(check_numbers >=  preamble[(i-1)+m,]$X1 || (j + n) > nrow(filter_numbers_less_than_target)){
stop = TRUE
}
preamble[(i-1)+m,]$X1
(j + n) > nrow(filter_numbers_less_than_target)
j
n <- 4
n <- 2
stop = FALSE
while(stop == FALSE){
check_numbers <- sum(filter_numbers_less_than_target[j:(j+(n-1)),]$X1)
# stop the while loop if the sum of the numbers is greater than or equal to the target number
# or stop is n is too big
if(check_numbers >=  preamble[(i-1)+m,]$X1 || (j + n) > nrow(filter_numbers_less_than_target)){
stop = TRUE
}
n <- n + 1
}
n
check_numbers
preamble[(i-1)+m,]$X1
# stop the for loop is the number has been found
if (check_numbers ==  preamble[(i-1)+m,]$X1){
break
}
j
n
filter_numbers_less_than_target[j:(j+(n-1)),]$X1
filter_numbers_less_than_target[j:(j+(n-2)),]$X1
# only need to consider numbers that are less than the preamble
filter_numbers_less_than_target <- preamble %>%
filter(X1 < preamble[i+m-1,]$X1)
for (j in 1:nrow(filter_numbers_less_than_target)){
n <- 2
stop = FALSE
while(stop == FALSE){
check_numbers <- sum(filter_numbers_less_than_target[j:(j+(n-1)),]$X1)
# stop the while loop if the sum of the numbers is greater than or equal to the target number
# or stop is n is too big
if(check_numbers >=  preamble[(i-1)+m,]$X1 || (j + n) > nrow(filter_numbers_less_than_target)){
stop = TRUE
}
n <- n + 1
}
# stop the for loop is the number has been found
if (check_numbers ==  preamble[(i-1)+m,]$X1){
break
}
}
j
n
filter_numbers_less_than_target[j:(j+(n-2)),]$X1
preamble <- read_csv('day9.txt', col_names = FALSE)
stop <- FALSE
i <- 1
m <- 5
while(stop == FALSE){
check_numbers <- preamble[i:(i+(m-1)),] %>%
mutate(need = preamble[i+m,]$X1 - preamble[i:(i+(m-1)),]$X1) %>%
mutate(answer = need %in% preamble[i:(i+(m-1)),]$X1 & X1 != need) %>%
filter(answer)
if (nrow(check_numbers) == 0){
print(preamble[i+m,]$X1)
stop = TRUE
}
i <- i + 1
}
# only need to consider numbers that are less than the preamble
filter_numbers_less_than_target <- preamble %>%
filter(X1 < preamble[i+m-1,]$X1)
for (j in 1:nrow(filter_numbers_less_than_target)){
n <- 2
stop = FALSE
while(stop == FALSE){
check_numbers <- sum(filter_numbers_less_than_target[j:(j+(n-1)),]$X1)
# stop the while loop if the sum of the numbers is greater than or equal to the target number
# or stop is n is too big
if(check_numbers >=  preamble[(i-1)+m,]$X1 || (j + n) > nrow(filter_numbers_less_than_target)){
stop = TRUE
}
n <- n + 1
}
# stop the for loop is the number has been found
if (check_numbers ==  preamble[(i-1)+m,]$X1){
break
}
}
filter_numbers_less_than_target[j:(j+(n-2)),]$X1
filter_numbers_less_than_target
preamble[i+m-1,]$X1
preamble <- read_csv('day9.txt', col_names = FALSE)
stop <- FALSE
i <- 1
m <- 25
while(stop == FALSE){
check_numbers <- preamble[i:(i+(m-1)),] %>%
mutate(need = preamble[i+m,]$X1 - preamble[i:(i+(m-1)),]$X1) %>%
mutate(answer = need %in% preamble[i:(i+(m-1)),]$X1 & X1 != need) %>%
filter(answer)
if (nrow(check_numbers) == 0){
print(preamble[i+m,]$X1)
stop = TRUE
}
i <- i + 1
}
# only need to consider numbers that are less than the preamble
filter_numbers_less_than_target <- preamble %>%
filter(X1 < preamble[i+m-1,]$X1)
filter_numbers_less_than_target
for (j in 1:nrow(filter_numbers_less_than_target)){
n <- 2
stop = FALSE
while(stop == FALSE){
check_numbers <- sum(filter_numbers_less_than_target[j:(j+(n-1)),]$X1)
# stop the while loop if the sum of the numbers is greater than or equal to the target number
# or stop is n is too big
if(check_numbers >=  preamble[(i-1)+m,]$X1 || (j + n) > nrow(filter_numbers_less_than_target)){
stop = TRUE
}
n <- n + 1
}
# stop the for loop is the number has been found
if (check_numbers ==  preamble[(i-1)+m,]$X1){
break
}
}
j
n
filter_numbers_less_than_target[j:(j+(n-2)),]$X1
sum(filter_numbers_less_than_target[j:(j+(n-2)),]$X1)
preamble[i+m,]$X1
preamble[i-1+m,]$X1
head(filter_numbers_less_than_target[j:(j+(n-2)),]$X1,1)
head(filter_numbers_less_than_target[j:(j+(n-2)),]$X1,1) + tail(filter_numbers_less_than_target[j:(j+(n-2)),]$X1,1)
tail(filter_numbers_less_than_target[j:(j+(n-2)),]$X1,1)
min(filter_numbers_less_than_target[j:(j+(n-2)),]$X1,1) + max(filter_numbers_less_than_target[j:(j+(n-2)),]$X1,1)
min(filter_numbers_less_than_target[j:(j+(n-2)),]$X1,1)
min(filter_numbers_less_than_target[j:(j+(n-2)),]$X1) + max(filter_numbers_less_than_target[j:(j+(n-2)),]$X1)
