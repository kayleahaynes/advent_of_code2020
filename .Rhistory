}
}
else {
i <- i + 1
}
}
i
length(row_sums)
row_sums[i] > 1
row_sums[i] == 3
i <- 1
total <- 1
while(i <= length(row_sums)){
print(i)
if (row_sums[i] > 1){
if(row_sums[i] == 3 & row_sums[i+1] == 3){
total <- total * 7
i <- i + 3
}
else if(row_sums[i] == 3 & row_sums[i+1] == 2){
total <- total * 4
i <- i + 2
} else if (row_sums[i] == 3){
total <- total * 2
i <- i + 1
}
}
else {
i <- i + 1
}
}
i
i <- 1
total <- 1
length(row_sums)
while(i <= length(row_sums)){
print(i)
if (row_sums[i] > 1){
if(row_sums[i] == 3 & row_sums[i+1] == 3){
total <- total * 7
i <- i + 3
}
else if(row_sums[i] == 3 & row_sums[i+1] == 2){
total <- total * 4
i <- i + 2
} else if (row_sums[i] == 3){
total <- total * 2
i <- i + 1
}
}
else {
i <- i + 1
}
}
i <- 1
total <- 1
while(i <= length(row_sums)){
print(i)
if (row_sums[i] > 1){
if(row_sums[i] == 3 & row_sums[i+1] == 3){
total <- total * 7
i <- i + 3
}
else if(row_sums[i] == 3 & row_sums[i+1] == 2){
total <- total * 4
i <- i + 2
} else if (row_sums[i] == 2){
total <- total * 2
i <- i + 1
}
}
else {
i <- i + 1
}
}
total
joltage <- read_csv('day10.txt', col_names = FALSE)
sort_joltage <- sort(c(0,joltage$X1))
(sum((sort_joltage - lag(sort_joltage) == 1), na.rm = TRUE)) * (sum((sort_joltage - lag(sort_joltage) == 3), na.rm = TRUE) + 1)
diff_matrix <- matrix(nrow = length(sort_joltage)-1, ncol = length(sort_joltage)-1)
for (i in 1:(length(sort_joltage)-1)){
for (j in (i + 1):length(sort_joltage)){
diff_matrix[i,j-1] <- sort_joltage[j] -  sort_joltage[i]
}
}
# only interested in 1s and 3s
diff_matrix[diff_matrix > 3] = NA
row_sums <- rowSums(!is.na(diff_matrix))
row_sums
i <- 1
total <- 1
while(i <= length(row_sums)){
print(i)
if (row_sums[i] > 1){
if(row_sums[i] == 3 & row_sums[i+1] == 3){
total <- total * 7
i <- i + 3
}
else if(row_sums[i] == 3 & row_sums[i+1] == 2){
total <- total * 4
i <- i + 2
} else if (row_sums[i] == 2){
total <- total * 2
i <- i + 1
}
}
else {
i <- i + 1
}
}
total
t1 <- NULL
i <- 1
total <- 1
t1 <- NULL
while(i <= length(row_sums)){
print(i)
if (row_sums[i] > 1){
if(row_sums[i] == 3 & row_sums[i+1] == 3){
total <- total * 7
i <- i + 3
t1 <- c(t1, 7)
}
else if(row_sums[i] == 3 & row_sums[i+1] == 2){
total <- total * 4
i <- i + 2
t1 <- c(t1, 4)
} else if (row_sums[i] == 2){
total <- total * 2
i <- i + 1
t1 <- c(t1, 2)
}
}
else {
i <- i + 1
}
}
t1
row_sums
prod(t1)
total
options(scipen = 999)
prod(t1)
diff_matrix
row_sums
View(diff_matrix)
diff_matrix
diff_matrix[!is.na(diff_matrix)] <- 1
diff_matrix
diff_matrix[is.na(diff_matrix)] <- 0
diff_matrix
diff_matrix <- matrix(nrow = length(sort_joltage)-1, ncol = length(sort_joltage)-1)
for (i in 1:(length(sort_joltage)-1)){
for (j in (i + 1):length(sort_joltage)){
diff_matrix[i,j-1] <- sort_joltage[j] -  sort_joltage[i]
}
}
# only interested in 1s and 3s
diff_matrix[diff_matrix > 3] = 0
diff_matrix
diff_matrix + t(diff_matrix)
# only interested in 1s and 3s
diff_matrix[diff_matrix > 3 | is.na(diff_matrix)] = 0
diff_matrix <- matrix(nrow = length(sort_joltage)-1, ncol = length(sort_joltage)-1)
for (i in 1:(length(sort_joltage)-1)){
for (j in (i + 1):length(sort_joltage)){
diff_matrix[i,j-1] <- sort_joltage[j] -  sort_joltage[i]
}
}
# only interested in 1s and 3s
diff_matrix[diff_matrix > 3 | is.na(diff_matrix)] = 0
diff_matrix
diff_matrix + t(diff_matrix)
diff_matrix <- diff_matrix + t(diff_matrix)
diff_matrix[diff_matrix > 0] <- 1
diff_matrix
rep(1, nrow(diff_matrix))
diff_matrix %*% rep(1, nrow(diff_matrix))
diff_matrix
diff_matrix %>% View()
diff_matrix <- matrix(nrow = length(sort_joltage)-1, ncol = length(sort_joltage)-1)
for (i in 1:(length(sort_joltage)-1)){
for (j in (i + 1):length(sort_joltage)){
diff_matrix[i,j-1] <- sort_joltage[j] -  sort_joltage[i]
}
}
diff_matrix
# only interested in 1s and 3s
diff_matrix[diff_matrix > 3 | is.na(diff_matrix)] <- 0
diff_matrix
View(diff_matrix)
row_sums
2*(2+1) / 2
row_sums
row_sums[row_sums != 1]
diff(row_sums[row_sums != 1])
diff(-row_sums[row_sums != 1])
which(diff(-row_sums[row_sums != 1]))
diff(-row_sums[row_sums != 1])
which(diff(-row_sums[row_sums != 1]) > 1)
which(diff(-row_sums[row_sums != 1]) > 0)
diff(-row_sums[row_sums != 1][which(diff(-row_sums[row_sums != 1]) > 0)]
)
diff(-row_sums[row_sums != 1])[which(diff(-row_sums[row_sums != 1]) > 0)]
row_sums[row_sums != 1][which(diff(-row_sums[row_sums != 1]) > 0)]
row_sums
row_sums
row_sums - 1
(row_sums - 1)
(row_sums - 1) * (row_sums)
(row_sums - 1) * (row_sums) / 2
(row_sums - 1) * (row_sums) / 2 + 1
row_sums - 1
row_sums
row_sums[row_sums > 1]
row_sums
row_sums == 1
cumsum(row_sums != 1)
cumsum(row_sums == 1)
tibble(groups = cumsum(row_sums == 1))
tibble(groups = cumsum(row_sums == 1)) %>%
group_by(groups)
tibble(groups = cumsum(row_sums == 1)) %>%
group_by(groups) %>%
mutate(count = n())
tibble(groups = cumsum(row_sums == 1)) %>%
group_by(groups) %>%
mutate(count = n()) %>%
distinct(groups, count)
row_sums
tibble(groups = cumsum(row_sums == 1)) %>%
group_by(groups) %>%
mutate(count = n())
4*(3)/2
4*(3)/2 + 1
(count * (count+1))/2
(triangle = (count * (count+1))/2)
tibble(groups = cumsum(row_sums == 1)) %>%
group_by(groups) %>%
mutate(count = n()) %>%
distinct(groups, count)
mutate(triangle = count_
tibble(groups = cumsum(row_sums == 1)) %>%
group_by(groups) %>%
mutate(count = n()) %>%
distinct(groups, count) %>%
mutate(triangle = count)
tibble(groups = cumsum(row_sums == 1)) %>%
group_by(groups) %>%
mutate(count = n()) %>%
distinct(groups, count) %>%
mutate(triangle = count * (count+1))
tibble(groups = cumsum(row_sums == 1)) %>%
group_by(groups) %>%
mutate(count = n()) %>%
distinct(groups, count) %>%
mutate(triangle = (count * (count+1))/2)
tibble(groups = cumsum(row_sums == 1)) %>%
group_by(groups) %>%
mutate(count = n()) %>%
distinct(groups, count) %>%
mutate(triangle = (count * (count+1))/2 + 1)
t1 <- tibble(groups = cumsum(row_sums == 1)) %>%
group_by(groups) %>%
mutate(count = n()) %>%
distinct(groups, count) %>%
mutate(triangle = (count * (count+1))/2 + 1)
t1$triangle
sum(t1$)
sum(t1$triangle)
prod(t1$triangle)
tibble(groups = cumsum(row_sums == 1))
row_sums
tibble(groups = cumsum(row_sums != 1))
t1 <- tibble(groups = cumsum(row_sums == lag(row_sums))) %>%
group_by(groups) %>%
mutate(count = n()) %>%
distinct(groups, count) %>%
mutate(triangle = (count * (count+1))/2 + 1)
tibble(groups = cumsum(row_sums == lag(row_sums)))
diff(row_sums)
row_sums
row_sums
diff(c(0,row_sums))
cumsum(diff(c(0,row_sums)) == 0)
cumsum(diff(c(0,row_sums)) != 0)
row_sums
diff(row_sums)
diff(c(0,row_sums))
row_sums
tibble(groups = cumsum(diff(row_sums))) %>%
group_by(groups) %>%
mutate(count = n()) %>%
distinct(groups, count) %>%
mutate(triangle = (count * (count+1))/2 + 1)
diff(c(0,row_sums))
diff(c(0,row_sums) >= 0)
diff(c(0,row_sums)) >= 0
cumsum(diff(c(0,row_sums)) >= 0)
cumsum(diff(c(0,row_sums)) >= 0 & lag(row_sums) != 3)
lag(row_sums) != 3
lag(c(0,row_sums) != 3)
lag(row_sums) != 3)
lag(row_sums)
lag(row_sums)[is.na(lag(row_sums))]
lag(row_sums)[is.na(lag(row_sums))] = 0
lag(row_sums)[is.na(lag(row_sums))]
cumsum(diff(c(0,row_sums)) >= 0 & lag(row_sums) != 3)
cumsum(diff(c(0,row_sums)) >= 0)
lag(row_sums)[is.na(lag(row_sums))]
lag(row_sums)[is.na(lag(row_sums))] <- 0
lag(row_sums)[is.na(lag(row_sums))]
lag(row_sums)[is.na(lag(row_sums))] = 1
lag(row_sums)
lead(row_sums)
cumsum(diff(c(0,row_sums)) >= 0 & lead(row_sums) != 3)
cumsum(diff(c(0,row_sums)) >= 0)
cumsum(diff(c(0,row_sums)) > 0)
cumsum(diff(c(0,row_sums)) > 0 | (diff(c(0,row_sums)) == 0 & lead(row_sums) != 3))
diff(c(0,row_sums)) > 0
(diff(c(0,row_sums)) == 0
(diff(c(0,row_sums)) == 0)
(diff(c(0,row_sums)) == 0)
(diff(c(0,row_sums)) == 0) & lead(row_sums) != 3
(diff(c(0,row_sums)) == 0) & lag(row_sums) != 3
cumsum(diff(c(0,row_sums)) > 0 | (diff(c(0,row_sums)) == 0 & lag(row_sums) != 3))
tibble(groups = cumsum(diff(c(0,row_sums)) > 0 | (diff(c(0,row_sums)) == 0 & lag(row_sums) != 3)))
tibble(groups = cumsum(diff(c(0,row_sums)) > 0 | (diff(c(0,row_sums)) == 0 & lag(row_sums) != 3))) %>%
group_by(groups) %>%
mutate(count = n())
tibble(groups = cumsum(diff(c(0,row_sums)) > 0 | (diff(c(0,row_sums)) == 0 & lag(row_sums) != 3))) %>%
group_by(groups) %>%
mutate(count = n()) %>%
distinct(groups, count)
tibble(groups = cumsum(diff(c(0,row_sums)) > 0 | (diff(c(0,row_sums)) == 0 & lag(row_sums) != 3))) %>%
group_by(groups) %>%
mutate(count = n()) %>%
distinct(groups, count) %>%
mutate(triangle = (count * (count+1))/2 + 1)
tibble(groups = cumsum(diff(c(0,row_sums)) > 0 | (diff(c(0,row_sums)) == 0 & lag(row_sums) != 3))) %>%
group_by(groups) %>%
mutate(count = n()) %>%
distinct(groups, count) %>%
mutate(triangle = (count-1 * (count))/2 + 1)
tibble(groups = cumsum(diff(c(0,row_sums)) > 0 | (diff(c(0,row_sums)) == 0 & lag(row_sums) != 3))) %>%
group_by(groups) %>%
mutate(count = n()) %>%
distinct(groups, count) %>%
mutate(triangle = ((count-1) * (count))/2 + 1)
t1 <- tibble(groups = cumsum(diff(c(0,row_sums)) > 0 | (diff(c(0,row_sums)) == 0 & lag(row_sums) != 3))) %>%
group_by(groups) %>%
mutate(count = n()) %>%
distinct(groups, count) %>%
mutate(triangle = ((count-1) * (count))/2 + 1)
t1$triangle
prod(t1$triangle)
diff_matrix <- matrix(nrow = length(sort_joltage)-1, ncol = length(sort_joltage)-1)
for (i in 1:(length(sort_joltage)-1)){
for (j in (i + 1):length(sort_joltage)){
diff_matrix[i,j-1] <- sort_joltage[j] -  sort_joltage[i]
}
}
# only interested in 1s and 3s
diff_matrix[diff_matrix > 3 | is.na(diff_matrix)] <- 0
row_sums <- rowSums(!is.na(diff_matrix))
t1 <- tibble(groups = cumsum(diff(c(0,row_sums)) > 0 | (diff(c(0,row_sums)) == 0 & lag(row_sums) != 3))) %>%
group_by(groups) %>%
mutate(count = n()) %>%
distinct(groups, count) %>%
mutate(triangle = ((count-1) * (count))/2 + 1)
t1$triangle
row_sums
diff_matrix <- matrix(nrow = length(sort_joltage)-1, ncol = length(sort_joltage)-1)
sort_joltage <- sort(c(0,joltage$X1))
(sum((sort_joltage - lag(sort_joltage) == 1), na.rm = TRUE)) * (sum((sort_joltage - lag(sort_joltage) == 3), na.rm = TRUE) + 1)
diff_matrix <- matrix(nrow = length(sort_joltage)-1, ncol = length(sort_joltage)-1)
for (i in 1:(length(sort_joltage)-1)){
for (j in (i + 1):length(sort_joltage)){
diff_matrix[i,j-1] <- sort_joltage[j] -  sort_joltage[i]
}
}
diff_matrix
# only interested in 1s and 3s
diff_matrix[diff_matrix > 3 | is.na(diff_matrix)] <- 0
diff_matrix
row_sums <- rowSums(!is.na(diff_matrix))
row_sums
diff_matrix <- matrix(nrow = length(sort_joltage)-1, ncol = length(sort_joltage)-1)
for (i in 1:(length(sort_joltage)-1)){
for (j in (i + 1):length(sort_joltage)){
diff_matrix[i,j-1] <- sort_joltage[j] -  sort_joltage[i]
}
}
# only interested in 1s and 3s
diff_matrix[diff_matrix > 3] <- NA
diff_matrix
row_sums <- rowSums(!is.na(diff_matrix))
row_sums
t1 <- tibble(groups = cumsum(diff(c(0,row_sums)) > 0 | (diff(c(0,row_sums)) == 0 & lag(row_sums) != 3))) %>%
group_by(groups) %>%
mutate(count = n()) %>%
distinct(groups, count) %>%
mutate(triangle = ((count-1) * (count))/2 + 1)
t1$triangle
prod(t1$triangle)
Decription of script ---------------------------------------------------------
# Day 8 advent of code --adaptor joltage
# ------------------------------------------------------------------------------
# set up -----------------------------------------------------------------------
library(tidyverse)
joltage <- read_csv('day10.txt', col_names = FALSE)
sort_joltage <- sort(c(0,joltage$X1))
(sum((sort_joltage - lag(sort_joltage) == 1), na.rm = TRUE)) * (sum((sort_joltage - lag(sort_joltage) == 3), na.rm = TRUE) + 1)
diff_matrix <- matrix(nrow = length(sort_joltage)-1, ncol = length(sort_joltage)-1)
for (i in 1:(length(sort_joltage)-1)){
for (j in (i + 1):length(sort_joltage)){
diff_matrix[i,j-1] <- sort_joltage[j] -  sort_joltage[i]
}
}
# only interested in 1s and 3s
diff_matrix[diff_matrix > 3] <- NA
row_sums <- rowSums(!is.na(diff_matrix))
t1 <- tibble(groups = cumsum(diff(c(0,row_sums)) > 0 | (diff(c(0,row_sums)) == 0 & lag(row_sums) != 3))) %>%
group_by(groups) %>%
mutate(count = n()) %>%
distinct(groups, count) %>%
mutate(triangle = ((count-1) * (count))/2 + 1)
prod(t1$triangle)
diff_matrix
diff_matrix %>% View()
row_sums
diff_matrix
sort_joltage
diff(sort_joltage)
str_split(diff(sort_joltage))
str_split(diff(sort_joltage), "3")
?str_split
str_split(diff(sort_joltage), "3")
str_split(diff(sort_joltage), '3')
diff_matrix <- matrix(nrow = length(sort_joltage)-1, ncol = length(sort_joltage)-1)
for (i in 1:(length(sort_joltage)-1)){
for (j in (i + 1):length(sort_joltage)){
diff_matrix[i,j-1] <- sort_joltage[j] -  sort_joltage[i]
}
}
diff_matrix
# only interested in 1s and 3s
diff_matrix[diff_matrix > 3] <- NA
diff_matrix
diff_matrix
sort_joltage
diff(sort_joltage)
as.character(diff(sort_joltage))
str_split(as.character(diff(sort_joltage)))
str_split(as.character(diff(sort_joltage)), "3")
?strsplit
strsplit(as.character(diff(sort_joltage)), "3")
str_split(as.character(diff(sort_joltage)), "3")
as.character(diff(sort_joltage))
diff(sort_joltage )
cumsum(diff(sort_joltage) != 0)
diff(diff(sort_joltage)) == 0
cumsum(diff(diff(sort_joltage)) != 0)
tibble(groups = cumsum(diff(diff(sort_joltage)) != 0)) %>%
group_by(groups) %>%
mutate(count=)
tibble(groups = cumsum(diff(diff(sort_joltage)) != 0)) %>%
group_by(groups) %>%
mutate(count=n())
tibble(groups = cumsum(diff(diff(sort_joltage)) != 0)) %>%
group_by(groups) %>%
mutate(count=n()) %>%
distinct(groups, count)
tibble(groups = cumsum(diff(diff(sort_joltage)) != 0)) %>%
group_by(groups) %>%
mutate(count=n()) %>%
distinct(groups, count) %>%
mutate(triangle = ((count-1) * (count))/2 + 1)
t2 <- tibble(groups = cumsum(diff(diff(sort_joltage)) != 0)) %>%
group_by(groups) %>%
mutate(count=n()) %>%
distinct(groups, count) %>%
mutate(triangle = ((count-1) * (count))/2 + 1)
t2$prod
t2$triangle
prod(t2$triangle)
t1 <- tibble(groups = cumsum(diff(c(0,row_sums)) > 0 | (diff(c(0,row_sums)) == 0 & lag(row_sums) != 3))) %>%
group_by(groups) %>%
mutate(count = n()) %>%
distinct(groups, count) %>%
mutate(triangle = ((count-1) * (count))/2 + 1)
t1
t2
sort_joltage
cumsum(diff(diff(sort_joltage)) != 0)
diff(sort_joltage)
diff(diff(sort_joltage))
diff(c(1, diff(sort_joltage))) != 0)
diff(c(1, diff(sort_joltage))) != 0
tibble(groups = cumsum(diff(c(1, diff(sort_joltage))) != 0)) %>%
group_by(groups) %>%
mutate(count=n())
tibble(groups = cumsum(diff(c(1, diff(sort_joltage))) != 0)) %>%
group_by(groups) %>%
mutate(count=n()) %>%
distinct(groups, count)
tibble(groups = cumsum(diff(c(1, diff(sort_joltage))) != 0)) %>%
group_by(groups) %>%
mutate(count=n()) %>%
distinct(groups, count) %>%
mutate(triangle = ((count-1) * (count))/2 + 1)
t1$triangle
